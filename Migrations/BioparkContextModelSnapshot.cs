// <auto-generated />
using System;
using DesafioBiopark;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DesafioBiopark.Migrations
{
    [DbContext(typeof(BioparkContext))]
    partial class BioparkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb3_bin")
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb3");

            modelBuilder.Entity("DesafioBiopark.Model.Migrations.ApartamentosMigration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("alugado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("andar")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("edificiosId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("edificiosId");

                    b.ToTable("Apartamentos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            alugado = true,
                            andar = 1,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(875),
                            edificiosId = 1,
                            isActive = true,
                            numero = 101,
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1208)
                        },
                        new
                        {
                            id = 2,
                            alugado = true,
                            andar = 1,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1765),
                            edificiosId = 1,
                            isActive = true,
                            numero = 102,
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1772)
                        },
                        new
                        {
                            id = 3,
                            alugado = true,
                            andar = 2,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1775),
                            edificiosId = 1,
                            isActive = true,
                            numero = 201,
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1776)
                        },
                        new
                        {
                            id = 4,
                            alugado = true,
                            andar = 2,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1779),
                            edificiosId = 1,
                            isActive = true,
                            numero = 202,
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1780)
                        },
                        new
                        {
                            id = 5,
                            alugado = true,
                            andar = 3,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1783),
                            edificiosId = 1,
                            isActive = true,
                            numero = 301,
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1784)
                        },
                        new
                        {
                            id = 6,
                            alugado = true,
                            andar = 3,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1791),
                            edificiosId = 1,
                            isActive = true,
                            numero = 302,
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1793)
                        },
                        new
                        {
                            id = 7,
                            alugado = true,
                            andar = 4,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1796),
                            edificiosId = 1,
                            isActive = true,
                            numero = 401,
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1797)
                        },
                        new
                        {
                            id = 8,
                            alugado = true,
                            andar = 4,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1800),
                            edificiosId = 1,
                            isActive = true,
                            numero = 402,
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(1801)
                        });
                });

            modelBuilder.Entity("DesafioBiopark.Model.Migrations.ContratoMigration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("apartamentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dtInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("locatarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("valorAluguelMen")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("apartamentoId");

                    b.HasIndex("locatarioId");

                    b.ToTable("Contratos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            apartamentoId = 1,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(5629),
                            dtInicio = new DateTime(2023, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            locatarioId = 1,
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(5945),
                            valorAluguelMen = 600.0
                        },
                        new
                        {
                            id = 2,
                            apartamentoId = 5,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(7050),
                            dtInicio = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            locatarioId = 5,
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 569, DateTimeKind.Local).AddTicks(7056),
                            valorAluguelMen = 600.0
                        });
                });

            modelBuilder.Entity("DesafioBiopark.Model.Migrations.EdificiosMigration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("locadora")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Edificios");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 545, DateTimeKind.Local).AddTicks(6857),
                            locadora = "Biopark",
                            nome = "Edificio primavera",
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 566, DateTimeKind.Local).AddTicks(8471)
                        });
                });

            modelBuilder.Entity("DesafioBiopark.Model.Migrations.LocatariosMigration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dataNasc")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Locatarios");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(2756),
                            dataNasc = new DateTime(1944, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            nome = "Alexandre Levi Renato Baptista",
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3072)
                        },
                        new
                        {
                            id = 2,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3644),
                            dataNasc = new DateTime(1944, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            nome = "Alexandre Levi Renato Baptista",
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3650)
                        },
                        new
                        {
                            id = 3,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3653),
                            dataNasc = new DateTime(2002, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            nome = "Liz Sônia Bernardes",
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3655)
                        },
                        new
                        {
                            id = 4,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3657),
                            dataNasc = new DateTime(1952, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            nome = "Lucas Pietro Noah Moura",
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3659)
                        },
                        new
                        {
                            id = 5,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3661),
                            dataNasc = new DateTime(1962, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            nome = "Elaine Natália Renata Souza",
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3662)
                        },
                        new
                        {
                            id = 6,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3674),
                            dataNasc = new DateTime(1945, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            nome = "Elisa Bianca Porto",
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3675)
                        },
                        new
                        {
                            id = 7,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3678),
                            dataNasc = new DateTime(1978, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            nome = "Francisca Isabelly Débora Rocha",
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3679)
                        },
                        new
                        {
                            id = 8,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3681),
                            dataNasc = new DateTime(1989, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            nome = "Alexandre Bryan Nogueira",
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3683)
                        },
                        new
                        {
                            id = 9,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3685),
                            dataNasc = new DateTime(1982, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            nome = "Nicole Analu Sarah Brito",
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3686)
                        },
                        new
                        {
                            id = 10,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3689),
                            dataNasc = new DateTime(1954, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            nome = "Daiane Sabrina da Rosa",
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3691)
                        },
                        new
                        {
                            id = 11,
                            createdAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3693),
                            dataNasc = new DateTime(1978, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            nome = "Benício Manuel Lima",
                            updatedAt = new DateTime(2023, 3, 3, 23, 58, 21, 568, DateTimeKind.Local).AddTicks(3695)
                        });
                });

            modelBuilder.Entity("DesafioBiopark.Model.Migrations.ApartamentosMigration", b =>
                {
                    b.HasOne("DesafioBiopark.Model.Migrations.EdificiosMigration", "edificios")
                        .WithMany()
                        .HasForeignKey("edificiosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("edificios");
                });

            modelBuilder.Entity("DesafioBiopark.Model.Migrations.ContratoMigration", b =>
                {
                    b.HasOne("DesafioBiopark.Model.Migrations.ApartamentosMigration", "apartamento")
                        .WithMany()
                        .HasForeignKey("apartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioBiopark.Model.Migrations.LocatariosMigration", "locatario")
                        .WithMany()
                        .HasForeignKey("locatarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("apartamento");

                    b.Navigation("locatario");
                });
#pragma warning restore 612, 618
        }
    }
}
