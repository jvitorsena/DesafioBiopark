// <auto-generated />
using System;
using DesafioBiopark;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DesafioBiopark.Migrations
{
    [DbContext(typeof(BioparkContext))]
    [Migration("20230302231356_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb3_bin")
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb3");

            modelBuilder.Entity("DesafioBiopark.Model.Migrations.ApartamentosMigration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("alugado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("andar")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("edificiosId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("locatariosId")
                        .HasColumnType("int");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("valorAluguelMens")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("edificiosId");

                    b.HasIndex("locatariosId");

                    b.ToTable("Apartamentos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            alugado = true,
                            andar = 1,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(7920),
                            edificiosId = 1,
                            isActive = true,
                            locatariosId = 1,
                            numero = 101,
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8286),
                            valorAluguelMens = 600.0
                        },
                        new
                        {
                            id = 2,
                            alugado = true,
                            andar = 1,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8941),
                            edificiosId = 1,
                            isActive = true,
                            locatariosId = 2,
                            numero = 102,
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8948),
                            valorAluguelMens = 600.0
                        },
                        new
                        {
                            id = 3,
                            alugado = true,
                            andar = 2,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8952),
                            edificiosId = 1,
                            isActive = true,
                            locatariosId = 3,
                            numero = 201,
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8955),
                            valorAluguelMens = 600.0
                        },
                        new
                        {
                            id = 4,
                            alugado = true,
                            andar = 2,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8958),
                            edificiosId = 1,
                            isActive = true,
                            locatariosId = 4,
                            numero = 202,
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8959),
                            valorAluguelMens = 600.0
                        },
                        new
                        {
                            id = 5,
                            alugado = true,
                            andar = 3,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8963),
                            edificiosId = 1,
                            isActive = true,
                            locatariosId = 5,
                            numero = 301,
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8964),
                            valorAluguelMens = 600.0
                        },
                        new
                        {
                            id = 6,
                            alugado = true,
                            andar = 3,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8971),
                            edificiosId = 1,
                            isActive = true,
                            locatariosId = 6,
                            numero = 302,
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8973),
                            valorAluguelMens = 600.0
                        },
                        new
                        {
                            id = 7,
                            alugado = true,
                            andar = 4,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8977),
                            edificiosId = 1,
                            isActive = true,
                            locatariosId = 7,
                            numero = 401,
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8979),
                            valorAluguelMens = 600.0
                        },
                        new
                        {
                            id = 8,
                            alugado = true,
                            andar = 4,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8982),
                            edificiosId = 1,
                            isActive = true,
                            locatariosId = 8,
                            numero = 402,
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 92, DateTimeKind.Local).AddTicks(8984),
                            valorAluguelMens = 600.0
                        });
                });

            modelBuilder.Entity("DesafioBiopark.Model.Migrations.EdificiosMigration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("locadora")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Edificios");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 63, DateTimeKind.Local).AddTicks(3780),
                            locadora = "Biopark",
                            nome = "Edificio primavera",
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 89, DateTimeKind.Local).AddTicks(7923)
                        });
                });

            modelBuilder.Entity("DesafioBiopark.Model.Migrations.LocatariosMigration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dataNasc")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("primeiroNome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("segundoNome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Locatarios");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(7135),
                            dataNasc = new DateTime(1944, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            primeiroNome = "Alexandre Levi",
                            segundoNome = "Renato Baptista",
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(7504)
                        },
                        new
                        {
                            id = 2,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8249),
                            dataNasc = new DateTime(1944, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            primeiroNome = "Alexandre Levi",
                            segundoNome = "Renato Baptista",
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8257)
                        },
                        new
                        {
                            id = 3,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8262),
                            dataNasc = new DateTime(2002, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            primeiroNome = "Liz",
                            segundoNome = "Sônia Bernardes",
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8264)
                        },
                        new
                        {
                            id = 4,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8267),
                            dataNasc = new DateTime(1952, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            primeiroNome = "Lucas",
                            segundoNome = "Pietro Noah Moura",
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8269)
                        },
                        new
                        {
                            id = 5,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8271),
                            dataNasc = new DateTime(1962, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            primeiroNome = "Elaine",
                            segundoNome = "Natália Renata Souza",
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8273)
                        },
                        new
                        {
                            id = 6,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8281),
                            dataNasc = new DateTime(1945, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            primeiroNome = "Elisa",
                            segundoNome = "Bianca Porto",
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8283)
                        },
                        new
                        {
                            id = 7,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8286),
                            dataNasc = new DateTime(1978, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            primeiroNome = "Francisca",
                            segundoNome = "Isabelly Débora Rocha",
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8288)
                        },
                        new
                        {
                            id = 8,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8291),
                            dataNasc = new DateTime(1989, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            primeiroNome = "Alexandre",
                            segundoNome = "Bryan Nogueira",
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8292)
                        },
                        new
                        {
                            id = 9,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8295),
                            dataNasc = new DateTime(1982, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            primeiroNome = "Nicole",
                            segundoNome = "Analu Sarah Brito",
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8296)
                        },
                        new
                        {
                            id = 10,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8301),
                            dataNasc = new DateTime(1954, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            primeiroNome = "Daiane",
                            segundoNome = "Sabrina da Rosa",
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8302)
                        },
                        new
                        {
                            id = 11,
                            createdAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8305),
                            dataNasc = new DateTime(1978, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            primeiroNome = "Benício",
                            segundoNome = "Manuel Lima",
                            updatedAt = new DateTime(2023, 3, 2, 20, 13, 56, 91, DateTimeKind.Local).AddTicks(8306)
                        });
                });

            modelBuilder.Entity("DesafioBiopark.Model.Migrations.ApartamentosMigration", b =>
                {
                    b.HasOne("DesafioBiopark.Model.Migrations.EdificiosMigration", "edificios")
                        .WithMany()
                        .HasForeignKey("edificiosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioBiopark.Model.Migrations.LocatariosMigration", "locatarios")
                        .WithMany()
                        .HasForeignKey("locatariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("edificios");

                    b.Navigation("locatarios");
                });
#pragma warning restore 612, 618
        }
    }
}
